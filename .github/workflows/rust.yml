name: Rust

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    

env:
  CARGO_TERM_COLOR: always

jobs:
  create_log_dir:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: mkdir
      run: mkdir -p ${{ github.workspace }}/logs
    
  build:
    needs: create_log_dir
    runs-on: ubuntu-latest
    matrix:
      prefix: 
        - 
        - "lib."
      values:
        - lib
        - rlib
        - dylib
        - cdylib
        - staticlib
    steps:
    - name: build with string
      run: >-
        echo "----------build ${{matrix.prefix}}crate-type = ${{matrix.value}}----------" > ${{ github.workspace }}/logs/${{matrix.prefix}}${{matrix.value}}.txt &&
        rm -rf ./target/ &&
        cargo build --lib --release --config '${{matrix.prefix}}crate-type = "${{matrix.value}}"' &&
        ls ./target/release/ >> ${{ github.workspace }}/logs/${{matrix.prefix}}${{matrix.value}}.txt &&
        echo "------------------------------" >> ${{ github.workspace }}/logs/${{matrix.prefix}}${{matrix.value}}.txt
    - name: build with array
      run: >-
        echo "----------build ${{matrix.prefix}}crate-type = [${matrix.value}]----------" > ${{ github.workspace }}/logs/${{matrix.prefix}}${{matrix.value}}-array.txt &&
        rm -rf ./target/ &&
        cargo build --lib --release --config '${{matrix.prefix}}crate-type = [${{matrix.value}}]' &&
        ls ./target/release/ >> ${{ github.workspace }}/logs/${{matrix.prefix}}${{matrix.value}}-array.txt &&
        echo "------------------------------" >> ${{ github.workspace }}/logs/${{matrix.prefix}}${{matrix.value}}-array.txt
  output:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: print output
      run: cat ${{ github.workspace }}/logs/*.txt | tee ${{ github.workspace }}/output-listing.txt
    - uses: actions/upload-artifact@v3
      with:
        name: output-listing.txt
        path: ${{ github.workspace }}/output-listing.txt
